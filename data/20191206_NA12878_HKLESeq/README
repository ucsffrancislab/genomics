

Add "machine gslanalyzer.qb3.berkeley.edu login ########## password ##########" to ~/.netrc

Then DO NOT USE the "ftp://" prefix or "-u username,password" in command 



lftp -e 'set ssl:verify-certificate no set ftp:ssl-protect-data true set ftp:ssl-force true' gslanalyzer.qb3.berkeley.edu:990

lftp -c 'set ssl:verify-certificate no set ftp:ssl-protect-data true set ftp:ssl-force true; open -e "mirror -c; quit" gslanalyzer.qb3.berkeley.edu:990'





Count raw bases


zcat SFSP003_S1_L001_R1_001.fastq.gz | paste -d "\t" - - - - | cut -f 2 | awk '{split($0,a,"");for(i in a){c[a[i]]++}}END{for(i in c){print(i" : "c[i])}}' > R1.base_counts.txt
N : 7919
A : 57727266
C : 53311136
T : 44407118
G : 37585867


zcat SFSP003_S1_L001_R2_001.fastq.gz | paste -d "\t" - - - - | cut -f 2 | awk '{split($0,a,"");for(i in a){c[a[i]]++}}END{for(i in c){print(i" : "c[i])}}' > R2.base_counts.txt
N : 10936
A : 59385649
C : 35812150
T : 40544524
G : 57286047







QC ???








sampleindexes.txt is from Shahil
Not sure of the origin of indexes.tsv





Re-Demultiplex


mkdir aryeelab
cd aryeelab

python ~/github/ucsffrancislab/umi/demultiplex.py --min_reads 100 --read1 ../SFSP003_S1_L001_R1_001.fastq.gz --read2 ../SFSP003_S1_L001_R2_001.fastq.gz --index1 ../SFSP003_S1_L001_I1_001.fastq.gz --index2 ../SFSP003_S1_L001_I2_001.fastq.gz --sample_barcodes ../sampleindexes.txt --max_hamming 1


for r1 in ?.r1.fastq ??.r1.fastq ; do
base=${r1%.r1.fastq}
echo ${base}
python ~/github/ucsffrancislab/umi/umitag.py \
--read1_in ${base}.r1.fastq \
--read2_in ${base}.r2.fastq \
--read1_out ${base}.r1.umitagged.fastq \
--read2_out ${base}.r2.umitagged.fastq \
--index1 ${base}.i1.fastq \
--index2 ${base}.i2.fastq
done


python ~/github/ucsffrancislab/umi/consolidate.py 36.r1.umitagged.fastq 36.r1.consolidated.fastq 15 0.9

for r1 in *.r1.umitagged.fastq ; do
base=${r1%.r1.umitagged.fastq}
python ~/github/ucsffrancislab/umi/consolidate.py ${base}.r1.umitagged.fastq ${base}.r1.consolidated.fastq 15 0.9
python ~/github/ucsffrancislab/umi/consolidate.py ${base}.r2.umitagged.fastq ${base}.r2.consolidated.fastq 15 0.9
done


for r1 in *.r1.consolidated.fastq ; do
r2=${r1/r1/r2}
base=${r1%.r1.consolidated.fastq}
~/github/najoshi/sickle/sickle pe -f ${r1} -r ${r2} -t sanger -o ${base}.r1.sickle.fastq -p ${base}.r2.sickle.fastq -s ${base}.si.sickle.fastq > ${base}.sickle.out
done


Too few reads usually causes scripts to fail when no pre or post fasta file. No overlappers

chimera.bash --human hg38 --viral SVAs_and_HERVs_KWHE --threads 4 *.r?.sickle.fastq &
mv working_dir chimera_hg38_SVAs_and_HERVs_KWHE
tail -n +2 chimera_hg38_SVAs_and_HERVs_KWHE/unpaired_insertion_points_table.hg38.Q20.sorted.csv | awk -F\| '{print $1":"$2}' | sort > chimera_hg38_SVAs_and_HERVs_KWHE.insertion_points




Get hg38 SVA/HERV positions from "aligned" app?
Some time ago I aligned bowtie2 --all -x hg38 SVAs_and_HERVs_KWHE.fasta 

ls -1 ~/github/unreno/aligned/20180410/SVAs_and_HERVs_KWHE.hg38*
/Users/jakewendt/github/unreno/aligned/20180410/SVAs_and_HERVs_KWHE.hg38.vs.sam.gz
/Users/jakewendt/github/unreno/aligned/20180410/SVAs_and_HERVs_KWHE.hg38.vsl.sam.gz
/Users/jakewendt/github/unreno/aligned/20180410/SVAs_and_HERVs_KWHE.hg38_no_alts.vs.sam.gz
/Users/jakewendt/github/unreno/aligned/20180410/SVAs_and_HERVs_KWHE.hg38_no_alts.vsl.sam.gz

Which? Convert sam.gz to bam. I don't have to.

for sam in ~/github/unreno/aligned/20180410/SVAs_and_HERVs_KWHE.hg38* ; do
base=$( basename ${sam} .sam.gz )
samtools view ${sam} | awk '{print $3":"$4}' | sort | uniq > ${base}.positions
done

for pos in *positions *points ; do
sed -E 's/[[:digit:]]{3}$/000/' ${pos} | uniq | sort > ${pos}.1k
sed -E 's/[[:digit:]]{4}$/0000/' ${pos} | uniq | sort > ${pos}.10k
done


for pos in *positions ; do
comm -12 chimera_hg38_SVAs_and_HERVs_KWHE.insertion_points.1k ${pos}.1k | wc -l > ${pos}.1k.same
comm -12 chimera_hg38_SVAs_and_HERVs_KWHE.insertion_points.10k ${pos}.10k | wc -l > ${pos}.10k.same
done






































for r1 in *.r1.sickle.fastq ; do
r2=${r1/r1/r2}
si=${r1/r1/si}
base=${r1%.r1.sickle.fastq}
for ref in hg38 NA12878 SVAs_and_HERVs_KWHE ; do
bowtie2 --threads 4 --very-sensitive-local -x ${ref} -U ${r1},${r2},${si} | samtools view -o ${base}.${ref}.bam
done
done






Re-Demultiplex with just i7? Not i5?


