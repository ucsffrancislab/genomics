

https://docs.gdc.cancer.gov/Data/Bioinformatics_Pipelines/DNA_Seq_Variant_Calling_Pipeline/

bamtofastq \
collate=1 \
exclude=QCFAIL,SECONDARY,SUPPLEMENTARY \
filename= <input.bam> \
gz=1 \
inputformat=bam \
level=5 \
outputdir= <output_path> \
outputperreadgroup=1 \
outputperreadgroupsuffixF=_1.fq.gz \
outputperreadgroupsuffixF2=_2.fq.gz \
outputperreadgroupsuffixO=_o1.fq.gz \
outputperreadgroupsuffixO2=_o2.fq.gz \
outputperreadgroupsuffixS=_s.fq.gz \
tryoq=1 \



Un-recalibrate TCGA's recalibration? NO

Remove DUPs as well? YES



I don't think that this is the way to go.
I think that I should explicitly name the output files using

F=<stdout>: output file for the first mates of pairs if collation is active.

F2=<stdout>: output file for the second mates of pairs if collation is active.

S=<stdout>: output file for single end reads if collation is active.

O=<stdout>: output file for unmatched (orphan) first mates if collation is active.

O2=<stdout>: output file for unmatched (orphan) second mates if collation is active.





Check read order

for f in 0*R?.fastq.gz ; do
echo $f
zcat $f | sed -n '1~4s/\/[[:digit:]]$//p' > ${f}.read_names &
done



link_or_concat.bash

cd sample/
nohup count_fasta_reads.bash *_R1.fastq.gz &

for f in [0-D]*t; do s=$( echo $f | awk -F_ '{print $1}' ); c=$( cat $f ); echo $s,$c; done > ../paired_read_counts.csv



date=$( date "+%Y%m%d%H%M%S" )
for f in *R1.fastq.gz ; do
${sbatch} --job-name=$( basename $f ) --time=60 --ntasks=4 --mem=30G --output ${f}.${date}.length.txt ~/.local/bin/average_fasta_read_length.bash $f
done


for f in *R1.fastq.gz ; do
echo $f
zcat ${f} | paste - - - - | cut -f2 | head -1000 | awk '{l+=length($1);i++}END{print l/i}' > ${f}.average_length.txt
done


for f in *average_length.txt ; do
echo $( basename $f _R1.fastq.gz.average_length.txt ),$( cat $f )
done > ../read_lengths.csv


date=$( date "+%Y%m%d%H%M%S" )
for f in out/*R1.fastq.gz ; do
${sbatch} --job-name=$( basename $f ) --time=120 --ntasks=4 --mem=30G --output ${f}.${date}.count.txt ~/.local/bin/count_fasta_reads.bash $f
done

for f in out/*read_count.txt ; do
echo $( basename $f _R1.fastq.gz.read_count.txt ),$( cat $f )
done > sequencing_paired_read_counts.csv



