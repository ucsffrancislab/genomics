
See /home/gwendt/github/ucsffrancislab/genomics/data/20200529_Raleigh_WES/20200607-manta-strelka/README


./manta_strelka.bash


Filter/select and merge out/*.manta_strelka/strelka/results/variants/somatic.snvs.vcf.gz


mkdir position_analysis
for f in out/*.manta_strelka/strelka/results/variants/somatic.snvs.vcf.gz ; do
sample=${f%.manta_strelka/strelka/results/variants/somatic.snvs.vcf.gz}
sample=$( basename $sample )
echo $sample
#bcftools query -f "%CHROM:%POS\n" -i 'TYPE="SNP"' ${f} > position_analysis/${sample}.manta_strelka_positions.SNP.txt
bcftools query -f "%CHROM:%POS\n" -i 'FILTER="PASS" && TYPE="SNP"' ${f} > position_analysis/${sample}.manta_strelka_positions.SNP.PASS.txt
bcftools query -f "%CHROM:%POS\n" -i 'FILTER="PASS" && TYPE="SNP" && MQ>30 && ReadPosRankSum>-10' ${f} > position_analysis/${sample}.manta_strelka_positions.SNP.PASS.30.-10.txt
bcftools query -f "%CHROM:%POS\n" -i 'FILTER="PASS" && TYPE="SNP" && MQ>60 && ReadPosRankSum>-8' ${f} > position_analysis/${sample}.manta_strelka_positions.SNP.PASS.60.-8.txt
bcftools query -f "%CHROM:%POS\n" -i 'FILTER="PASS" && TYPE="SNP" && MQ>40 && ReadPosRankSum>-8' ${f} > position_analysis/${sample}.manta_strelka_positions.SNP.PASS.40.-8.txt
bcftools query -f "%CHROM:%POS\n" -i 'FILTER="PASS" && TYPE="SNP" && MQ>40 && ReadPosRankSum>-4' ${f} > position_analysis/${sample}.manta_strelka_positions.SNP.PASS.40.-4.txt
done


for x in SNP.PASS SNP.PASS.30.-10 SNP.PASS.40.-4 SNP.PASS.40.-8 SNP.PASS.60.-8 ; do
echo $x
./merge_position_lists.py --output mutation_positions.${x}.csv.gz position_analysis/*.manta_strelka_positions.${x}.txt
done


zcat mutation_positions.40.-8.csv.gz | awk 'BEGIN{FS=OFS=","}(NR==1){print "chromosome,position,sum"}(NR>1){s=0;for(i=3;i<=NF;i++){s+=$i}if(s>5)print $1,$2,s}'



for f in mutation_positions.SNP.PASS* ; do
echo $f
o=$( basename $f .csv.gz )
o=${o/mutation_positions/mutation_positions.interested}
zcat $f | grep -f interested.csv > ${o}.csv
done

















REDO with updated version of awk script


for f in out/*.manta_strelka/strelka/results/variants/somatic.snvs.vcf.gz ; do
sample=${f%.manta_strelka/strelka/results/variants/somatic.snvs.vcf.gz}
sample=$( basename $sample )
echo $f $sample
bcftools query -f "%LINE" -i 'FILTER="PASS" && TYPE="SNP" && MQ>40 && ReadPosRankSum>-8' ${f} | awk -v sample=$sample -f ~/.local/bin/tumor_normal_vcf_prep_for_mutation_signatures.awk
done


Note that TCGA used hg19


~/github/jakewendt/Mutation-Signatures/count_trinuc_muts_v8.pl pvcf /francislab/data1/refs/fasta/Homo_sapiens_assembly19.fasta count_trinuc_input.csv > mut_all_sort.txt







Create a mutations signature notebook to be executed at the command line.
Sadly, this would have to be on my laptop as it doesn't work on the cluster.

simplify and generalize notebook

signature versions need to be rigid given the differences

However, the "mut.txt" and "mut_all_sort.txt" have a fixed structure
so create environment variables for these 2 files.

drop tissue

export environmentVariable1="Some Value"
export environmentVariable2="Some Value"
jupyter_nbconvert.bash --to html --execute --output OUTPUT.html --ExecutePreprocessor.timeout=600 ~/.local/bin/mutation_signatures.ipynb
b="My Analysis Title"
sed -i "s/<title>mutation_signatures<\/title>/<title>${b}<\/title>/" OUTPUT.html
sed -i 's/\(id="notebook-container">\)$/\1<h1 align="center">'${b}'<\/h1>/' OUTPUT.html


head -100 ~/.local/bin/deseq.ipynb
Reproduce-2.v91.v3.empty.ipynb








#	( $1 == "5" && $2 == "1295228" )
#	( $1 == "5" && $2 == "1295250" )

echo "sample,2:209113112,2:209113113,5:1295228,5:1295250" > all_strelka_mutations.csv
for dir in out/*.manta_strelka ; do
base=$( basename $dir .manta_strelka )
a=$( zcat ${dir}/strelka/results/variants/somatic.snvs.vcf.gz | awk -F"\t" '\
	( $1 == 2 && $2 == 209113112 ){print 1}
	( $1 >= 3 ){ exit }' )
b=$( zcat ${dir}/strelka/results/variants/somatic.snvs.vcf.gz | awk -F"\t" '\
	( $1 == 2 && $2 == 209113113 ){print 1}
	( $1 >= 3 ){ exit }' )
c=$( zcat ${dir}/strelka/results/variants/somatic.snvs.vcf.gz | awk -F"\t" '\
	( $1 == 5 && $2 == 1295228 ){print 1}
	( $1 >= 6 ){ exit }' )
d=$( zcat ${dir}/strelka/results/variants/somatic.snvs.vcf.gz | awk -F"\t" '\
	( $1 == 5 && $2 == 1295250 ){print 1}
	( $1 >= 6 ){ exit }' )
echo ${base},${a:-0},${b:-0},${c:-0},${d:-0}
done >> all_strelka_mutations.csv










bcftools query -f "%LINE" -i 'FILTER="PASS" && TYPE="SNP"' out/TQ-A8XE-01A-11D-A36O.manta_strelka/strelka/results/variants/somatic.snvs.vcf.gz > SNP.PASS
bcftools query -f "%LINE" -i 'MIN(FMT/DP)>2 && TYPE="SNP" && SomaticEVS>=7' out/TQ-A8XE-01A-11D-A36O.manta_strelka/strelka/results/variants/somatic.snvs.vcf.gz > SNP.gt2.gte7
bcftools query -f "%LINE" -i 'MIN(FMT/DP)>2 && TYPE="SNP" && SomaticEVS>7' out/TQ-A8XE-01A-11D-A36O.manta_strelka/strelka/results/variants/somatic.snvs.vcf.gz > SNP.gt2.gt7
bcftools query -f "%LINE" -i 'MIN(FMT/DP)>=2 && TYPE="SNP" && SomaticEVS>7' out/TQ-A8XE-01A-11D-A36O.manta_strelka/strelka/results/variants/somatic.snvs.vcf.gz > SNP.gte2.gt7
bcftools query -f "%LINE" -i 'MIN(FMT/DP)>=2 && TYPE="SNP" && SomaticEVS>=7' out/TQ-A8XE-01A-11D-A36O.manta_strelka/strelka/results/variants/somatic.snvs.vcf.gz > SNP.gte2.gte7




's/.\{'${#x}'\}$/'${x}'/' 
Round each list to 100, 1000, 10000, then uniq -c to get counts ( or is 1 enough then just uniq -d? )
cat $f | sed "s/\d\{${#x}\}$/${x}/" | uniq > ${f%.txt}.${x}.txt

echo "123" | awk '{print int(($1/1000)000)}'

for x in 0 00 000 0000  ; do
echo $x
for f in position_analysis/*.manta_strelka_positions.SNP.PASS.txt ; do
echo $f
awk -v v=$x -F: '{d=int("1"v); print $1":"int(int($2/d)v)}' $f | uniq > ${f%.txt}.${x}.txt
done
echo merging
./merge_position_lists.py --output mutation_positions.SNP.PASS.${x}.csv.gz position_analysis/*.manta_strelka_positions.SNP.PASS.${x}.txt
done

zcat mutation_positions.SNP.PASS.csv.gz | wc -l
621422
zcat mutation_positions.SNP.PASS.0.csv.gz | wc -l
610866
zcat mutation_positions.SNP.PASS.00.csv.gz | wc -l
583481
zcat mutation_positions.SNP.PASS.000.csv.gz | wc -l
500205
zcat mutation_positions.SNP.PASS.0000.csv.gz | wc -l
229524


for x in . .0. .00. .000. .0000.  ; do
echo $x
zcat mutation_positions.SNP.PASS${x}csv.gz | awk 'BEGIN{FS=OFS=","}(NR==1){print "chromosome,position,sum"}(NR>1){s=0;for(i=3;i<=NF;i++){s+=$i}if(s>20)print $1,$2,s}'
done






mkdir out-long; cd out-long
while IFS=, read -r tumor normal ; do
#echo $tumor
trimmed=${tumor%-??}
#echo $trimmed
ln -s ../out/${trimmed}.manta_strelka ${tumor}.manta_strelka
done < /francislab/data1/raw/20200603-TCGA-GBMLGG-WGS/tumor_normal_pairs_long.csv 




mkdir position_analysis-long
for f in out-long/*.manta_strelka/strelka/results/variants/somatic.snvs.vcf.gz ; do
sample=${f%.manta_strelka/strelka/results/variants/somatic.snvs.vcf.gz}
sample=$( basename $sample )
echo $sample
bcftools query -f "%CHROM:%POS\n" -i 'FILTER="PASS" && TYPE="SNP"' ${f} > position_analysis-long/${sample}.manta_strelka_positions.SNP.PASS.txt
done



mkdir position_analysis-long
for f in out-long/*.manta_strelka/strelka/results/variants/somatic.indels.vcf.gz ; do
sample=${f%.manta_strelka/strelka/results/variants/somatic.indels.vcf.gz}
sample=$( basename $sample )
echo $sample
bcftools query -f "%CHROM:%POS\n" -i 'FILTER="PASS" && TYPE="INDEL"' ${f} | uniq > position_analysis-long/${sample}.manta_strelka_positions.INDEL.PASS.txt
done

X:17081930 not unique in ...
out-long/DU-5872-01A-11D-A465-08.manta_strelka/strelka/results/variants/somatic.indels.vcf.gz | more
could be others. Adding uniq to creation of position lists


./merge_position_lists.py --output mutation_positions.INDEL.PASS.csv.gz position_analysis-long/*.manta_strelka_positions.INDEL.PASS.txt


for x in 0 00 000 0000  ; do
echo $x
for f in position_analysis-long/*.manta_strelka_positions.INDEL.PASS.txt ; do
echo $f
awk -v v=$x -F: '{d=int("1"v); print $1":"int(int($2/d)v)}' $f | uniq > ${f%.txt}.${x}.txt
done
echo merging
./merge_position_lists.py --output mutation_positions.INDEL.PASS.${x}.csv.gz position_analysis-long/*.manta_strelka_positions.INDEL.PASS.${x}.txt
done



