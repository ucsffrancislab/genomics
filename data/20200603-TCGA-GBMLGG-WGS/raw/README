

Program Name IS TCGA AND Project Id IN TCGA-GBM ,TCGA-LGG  AND Data Format IS BAM AND Experimental Strategy IS WGS AND Platform IS Illumina HiSeq

278 files
125 cases 
38.02 TB

miRNA BAM
756 files
517 cases
206.88 GB

RNA FASTQ
709 files
683 cases
4.63 TB

RNA BAM
895 files
700 cases
6.92 TB

WXM BAM
2822 files
946 cases
51.09 TB

WXM BAM (Illumina HiSeq)
2238 files
819 cases
37.32 TB

Also downloaded manifests for RNA, miRNA, WXS bam files and RNA fastq files.



nohup gdc-client download --latest -t ~/gdc/gdc-user-token.2020-05-29T20_51_19.324Z.txt -m gdc_manifest.TCGA.GBM-LGG.WGS.bam.2020-06-04.txt &


Failed in a couple places so rerunning

nohup gdc-client download --latest -t ~/gdc/gdc-user-token.2020-05-29T20_51_19.324Z.txt -m gdc_manifest.TCGA.GBM-LGG.WGS.bam.2020-06-04.txt &


20200622 8pm
ll */*bam | wc -l
119


nohup gdc-client download --debug --latest -t ~/gdc/gdc-user-token.2020-05-29T20_51_19.324Z.txt -m gdc_manifest.TCGA.GBM-LGG.WGS.bam.2020-06-04.txt &

20200623 8am
ll */*bam | wc -l
119



Using manifest files are just too "mysterious". No idea what is downloading.
All the hash filenames are just so undesireable.
Unclear why the previous run crashed.
Unclear what has been happening overnight since no new files exist.
Still only 119 bam files and expecting 279.




Trying to speed things up


nohup gdc-client download --latest -t ~/gdc/gdc-user-token.2020-05-29T20_51_19.324Z.txt -m gdc_manifest.TCGA.GBM-LGG.WGS.bam.2020-06-04.txt --no-segment-md5sums --no-file-md5sum  --no-related-files --no-annotations &

nohup gdc-client download --latest -t ~/gdc/gdc-user-token.2020-06-29T14_06_30.398Z.txt -m gdc_manifest.TCGA.GBM-LGG.WGS.bam.2020-06-04.txt --no-segment-md5sums --no-file-md5sum  --no-related-files --no-annotations &


This takes entirely too long simply to evaluate downloaded files.
I highly recommend manually looping through the manifest file, checking if the downloaded file exists and downloading individually.
No idea what it is doing that takes so long when it isn't actually downloading anything.
Been running for hours now and hasn't downloaded anything new.


awk -F"\t" '{if(system("[ ! -f "$1"/"$2" ]") == 0) {print $0}}' gdc_manifest.TCGA.GBM-LGG.WGS.bam.2020-06-04.txt > gdc_manifest.TCGA.GBM-LGG.WGS.bam.2020-06-04.txt.20200629.txt

nohup gdc-client download --latest -t ~/gdc/gdc-user-token.2020-06-29T14_06_30.398Z.txt -m gdc_manifest.TCGA.GBM-LGG.WGS.bam.2020-06-04.txt.20200629.txt --no-segment-md5sums --no-file-md5sum  --no-related-files --no-annotations &


Nothing for 4 days. Restarting.


nohup gdc-client download --latest -t ~/gdc/gdc-user-token.2020-06-29T14_06_30.398Z.txt -m gdc_manifest.TCGA.GBM-LGG.WGS.bam.2020-06-04.txt &




https://docs.gdc.cancer.gov/Data/Bioinformatics_Pipelines/DNA_Seq_Variant_Calling_Pipeline/
Suggested conversion from bam to paired fastqs

bamtofastq \
collate=1 \
exclude=QCFAIL,SECONDARY,SUPPLEMENTARY \
filename= <input.bam> \
gz=1 \
inputformat=bam \
level=5 \
outputdir= <output_path> \
outputperreadgroup=1 \
outputperreadgroupsuffixF=_1.fq.gz \
outputperreadgroupsuffixF2=_2.fq.gz \
outputperreadgroupsuffixO=_o1.fq.gz \
outputperreadgroupsuffixO2=_o2.fq.gz \
outputperreadgroupsuffixS=_s.fq.gz \
tryoq=1 \





#l=${l/13_mirna/${h}}

echo $f
h=$( basename $( dirname $f ) )
h=${h%%-*}

mkdir bam;cd bam
for f in /francislab/data1/raw/20200603-TCGA-GBMLGG-WGS/*-*/*bam* ; do
l=$( basename $f )
l=${l#*TCGA-}
l=${l/_*bam/.bam}
l=${l/-??.?.bam/.bam}
echo $l
ln -s $f $l
done

mkdir bam-long;cd bam-long
for f in /francislab/data1/raw/20200603-TCGA-GBMLGG-WGS/*-*-*-*-*/*bam* ; do
l=$( basename $f )
l=${l#*TCGA-}
l=${l/_*bam/.bam}
l=${l/.?.bam/.bam}
#l=${l/-??.?.bam/.bam}
echo $f
echo $l
ln -s $f $l
done



01 - Primary Tumor
02 - Recurring Tumor
10 - Blood Derived Normal
11 - Solid Tissue Derived Normal





for b in 02-2483 02-2485 19-2620 19-2629 E1-5318 E1-5319 HW-7486 HW-7489 ; do
echo $b
for bam in bam/${b}*bam ; do
o=$( basename $bam .bam )
samtools view -o chr2/${o}.chr2.bam $bam 2:209,111,400-209,114,516 
done
done

for bam in bam/*bam ; do
o=$( basename $bam .bam )
echo $o
samtools view -o chr2/${o}.chr2.bam $bam 2:209,111,400-209,114,516 
samtools index chr2/${o}.chr2.bam
done


for bam in bam/*bam ; do
o=$( basename $bam .bam )
echo $o
samtools view -o chr5/${o}.chr5.bam $bam 5:1,294,000-1,297,000
samtools index chr5/${o}.chr5.bam
done



for bam in bam/*bam ; do
echo $bam
samtools mpileup --excl-flags UNMAP,SECONDARY,QCFAIL,DUP --min-MQ 40 --region 2:209113112-209113112 ${bam} 2> /dev/null | awk '{print toupper($5)}' |  sed -e 's/\^\]\$//g' -e 's/\(.\)/\1\n/g' | grep -v "^$" | sort | uniq -c
done



for bam in /francislab/data1/raw/20200603-TCGA-GBMLGG-WGS/bam/*bam ; do
echo $bam
paste <( samtools view -H ${bam} | grep "^@SQ" | awk '{print $2}' | awk -F: '{print $2}' ) <( cat ${bam}.bai | bamReadDepther | grep "^#" ) | awk 'BEGIN{FS=OFS="\t"}{print $1,$3?$3:0}' > ${bam}.aligned_sequence_counts.txt
uc=$( cat ${bam}.bai | bamReadDepther | grep "^[#*]" | awk -F"\t" '{s+=$3}END{print s?s:0}' )
echo -e "unmapped\t${uc}" >> ${bam}.aligned_sequence_counts.txt
done


Add total unmapped and placed/unmapped?
cat bam/02-2483-01A-01D-1494.bam.bai | bamReadDepther | grep "^[#*]" | awk -F"\t" '{s+=$3}END{print s?s:0}'
92109919





cat metadata.cart.TCGA.GBM-LGG.WGS.bam.2020-07-17.json | jq -r '[.[] | {center_name: .center.name, submitter: .cases[].submitter_id, days_to_death: .cases[].diagnoses[].days_to_death, gender: .cases[].demographic.gender, disease_type: .cases[].disease_type, race: .cases[].demographic.race }] | map(.submitter),map(.days_to_death),map(.gender),map(.disease_type),map(.center_name) | @csv' | datamash transpose -t, | sort | uniq | tr -d \" | sed 's/^TCGA-//' > metadata.cart.TCGA.GBM-LGG.WGS.bam.2020-07-17.csv


cat metadata.cart.TCGA.GBM-LGG.WGS.bam.2020-07-17.json | jq -r '[.[] | {center_name: .center.name, submitter: .cases[].submitter_id, entity_submitter: .associated_entities[].entity_submitter_id, days_to_death: .cases[].diagnoses[].days_to_death, gender: .cases[].demographic.gender, disease_type: .cases[].disease_type, race: .cases[].demographic.race }] | map(.submitter),map(.entity_submitter),map(.days_to_death),map(.gender),map(.disease_type),map(.center_name) | @csv' | datamash transpose -t, | sort | uniq | tr -d \" | sed 's/TCGA-//g' > metadata.cart.TCGA.GBM-LGG.WGS.bam.2020-07-17.csv

Note that samples from the Harvard Medical School are substantially smaller.

cat metadata.cart.TCGA.GBM-LGG.WGS.bam.2020-07-17.json | jq -r '[.[] | {center_name: .center.name, submitter: .cases[].submitter_id, entity_submitter: .associated_entities[].entity_submitter_id, days_to_death: .cases[].diagnoses[].days_to_death, gender: .cases[].demographic.gender, disease_type: .cases[].disease_type, race: .cases[].demographic.race, spectro: .cases[].samples[].portions[].analytes[].spectrophotometer_method }] | map(.submitter),map(.entity_submitter),map(.days_to_death),map(.gender),map(.disease_type),map(.center_name),map(.spectro) | @csv' | datamash transpose -t, | sort | uniq | tr -d \" | sed 's/TCGA-//g' > metadata.cart.TCGA.GBM-LGG.WGS.bam.2020-07-17.csv

cat metadata.cart.TCGA.GBM-LGG.WGS.bam.2020-07-17.json | jq -r '[.[] | {center_name: .center.name, submitter: .cases[].submitter_id, entity_submitter: .associated_entities[].entity_submitter_id, days_to_death: .cases[].diagnoses[].days_to_death, gender: .cases[].demographic.gender, disease_type: .cases[].disease_type, race: .cases[].demographic.race, morphology: .cases[].diagnoses[].morphology }] | map(.submitter),map(.entity_submitter),map(.days_to_death),map(.gender),map(.disease_type),map(.center_name),map(.morphology) | @csv' | datamash transpose -t, | sort | uniq | tr -d \" | sed 's/TCGA-//g' > metadata.cart.TCGA.GBM-LGG.WGS.bam.2020-07-17.csv

