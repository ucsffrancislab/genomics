
You will need to load the latest sqlite so add this to you .bash_profile
An older version is loaded by default, but will error "Error: file is encrypted or is not a database"

module load sqlite


I have created just the "gb" version as it included everything that I searched for. Should you ever need something and its accession number is not found, please let me know and I'll create a different one.






Download everything and then make a several databases with subsets of everything.
In general, smaller databases search faster.
```
nohup taxadb download --outdir taxadb_full --type full -f &

nohup taxadb create --dbtype sqlite --fast -i taxadb_full --dbname taxadb_gb.sqlite   --division gb &
nohup taxadb create --dbtype sqlite --fast -i taxadb_full --dbname taxadb_nucl.sqlite --division nucl &
nohup taxadb create --dbtype sqlite --fast -i taxadb_full --dbname taxadb_prot.sqlite --division prot &
nohup taxadb create --dbtype sqlite --fast -i taxadb_full --dbname taxadb_full.sqlite --division full &
```





A "simple" command like ...

```
sqlite3 /francislab/data1/refs/taxadb/taxadb_gb.sqlite  "select a.accession, t1.ncbi_taxid, t1.tax_name, t1.lineage_level, t2.ncbi_taxid, t2.tax_name, t2.lineage_level, t3.ncbi_taxid, t3.tax_name, t3.lineage_level, t4.ncbi_taxid, t4.tax_name, t4.lineage_level, t5.ncbi_taxid, t5.tax_name, t5.lineage_level, t6.ncbi_taxid, t6.tax_name, t6.lineage_level from accession a join taxa t1 on t1.ncbi_taxid = a.taxid_id join taxa t2 on t2.ncbi_taxid = t1.parent_taxid join taxa t3 on t3.ncbi_taxid = t2.parent_taxid join taxa t4 on t4.ncbi_taxid = t3.parent_taxid join taxa t5 on t5.ncbi_taxid = t4.parent_taxid join taxa t6 on t6.ncbi_taxid = t5.parent_taxid where a.accession = 'NC_006273'"

sqlite3 /francislab/data1/refs/taxadb/taxadb_prot.sqlite  "select a.accession, t1.ncbi_taxid, t1.tax_name, t1.lineage_level, t2.ncbi_taxid, t2.tax_name, t2.lineage_level, t3.ncbi_taxid, t3.tax_name, t3.lineage_level, t4.ncbi_taxid, t4.tax_name, t4.lineage_level, t5.ncbi_taxid, t5.tax_name, t5.lineage_level, t6.ncbi_taxid, t6.tax_name, t6.lineage_level from accession a join taxa t1 on t1.ncbi_taxid = a.taxid_id join taxa t2 on t2.ncbi_taxid = t1.parent_taxid join taxa t3 on t3.ncbi_taxid = t2.parent_taxid join taxa t4 on t4.ncbi_taxid = t3.parent_taxid join taxa t5 on t5.ncbi_taxid = t4.parent_taxid join taxa t6 on t6.ncbi_taxid = t5.parent_taxid where a.accession = 'YP_001129440'"
```

Will output more info than you might need. Feel free to modify.

NC_006273|10359|Human betaherpesvirus 5|species|10358|Cytomegalovirus|genus|10357|Betaherpesvirinae|subfamily|10292|Herpesviridae|family|548681|Herpesvirales|order|10239|Viruses|superkingdom



I have now created 3 versions of this database.

Small databases search faster than larger one so to optimize, choose the one that you need.

Protein accession numbers won't be in taxadb_gb.

NC accession numbers won't be in taxadb_prot.

sqlite3 /francislab/data1/refs/taxadb/taxadb_gb.sqlite  "select * from accession where accession = 'NC_006273'"

sqlite3 /francislab/data1/refs/taxadb/taxadb_prot.sqlite  "select * from accession where accession = 'YP_001129440'"

sqlite3 /francislab/data1/refs/taxadb/taxadb_full.sqlite  "select * from accession where accession = 'NC_006273'"
sqlite3 /francislab/data1/refs/taxadb/taxadb_full.sqlite  "select * from accession where accession = 'YP_001129440'"


Note that accession numbers DO NOT include the version suffix.







##################################################
#
#	20200429 - Add data extracted from nr database
#

sqlite3 taxadb_full_nr.sqlite "CREATE TABLE nr ( accession VARCHAR NOT NULL, taxid_id INTEGER NOT NULL, sciname VARCHAR NOT NULL, blastname VARCHAR NOT NULL, superkingdon VARCHAR NOT NULL  FOREIGN KEY ("taxid_id") REFERENCES "taxa" ("ncbi_taxid")); CREATE UNIQUE INDEX ix ON nr(accession);"


#	sciname, blastname and superkingdom are unnecessary and could be removed if to large


sqlite3 taxadb_full_nr.sqlite -cmd '.separator "---"' ".import nr.aTSBK.sorted.txt nr"
Error: multi-character column separators not allowed for import

NR data contained pipes, quotes and commas. 

cat nr.aTSBK.sorted.txt | python -c "import sys; import pandas as pd; pd.read_csv(sys.stdin, header=None, sep='---',engine='python').to_csv(sys.stdout,header=False,index=False,sep=',')" > nr.aTSBK.sorted.csv

nohup python -c "import pandas as pd; pd.read_csv('nr.aTSBK.sorted.txt', header=None, sep='---',engine='python').to_csv('nr.aTSBK.sorted.csv',header=False,index=False,sep=',')" &


sqlite3 taxadb_full_nr.sqlite -cmd '.separator ", ".import nr.aTSBK.sorted.csv nr"


