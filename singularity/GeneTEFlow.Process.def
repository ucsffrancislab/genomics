
Bootstrap: docker
From: ubuntu:20.04

#	16 is so old
#From: ubuntu:16.04

%runscript

	exec echo "The runscript is the containers default runtime command!"


%files

#	/home/vanessa/Desktop/hello-kitty.txt        # copied to root of container

#	/home/vanessa/Desktop/party_dinosaur.gif     /opt/the-party-dino.gif #


%environment

	VARIABLE=MEATBALLVALUE

	export VARIABLE

	#"LANG=C" is the default locale in the applications code itself,and get english-only in the menus.
	#see https://ubuntuforums.org/showthread.php?t=1749224
	export LANG=C
	

%labels

	AUTHOR George.Wendt@ucsf.edu

#LABEL base_image="ubuntu:16.04"
#LABEL about.summary="RNA-seq pipeline (Pfizer confidential)"
#LABEL about.license="Pfizer"
#LABEL about.tags="Genomics"
#MAINTAINER Xiaochuan (David) Liu <xiaochuan.liu@pfizer.com>


%post

	#	https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
	export TZ=America/Phoenix
	ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

	apt-get clean all
	apt-get -y update
	apt-get -y upgrade
#	apt-get -y install bash git wget gcc g++ gfortran make bzip2 unzip zip
#	apt-get -y install zlib1g-dev zlib1g libbz2-dev zlib1g-dev
#	apt-get -y install libncurses5-dev libncursesw5-dev liblzma-dev libcurl4-openssl-dev
#	apt-get -y install python
#	apt-get -y install libpcre2-dev libpcre3-dev

	apt-get -y install bash git wget gcc g++ gfortran make bzip2 unzip zip \
		zlib1g libbz2-dev \
		libncurses5-dev libncursesw5-dev liblzma-dev libcurl4-openssl-dev \
		libpcre2-dev libpcre3-dev libreadline-dev \
		libcurl4-openssl-dev curl \
		libssl-dev openssl  \
		libjpeg-dev zlib1g-dev libpng-dev \
		pkg-config libxml2-dev libcurl4-openssl-dev \
		default-jdk \
		default-jre perl build-essential gcc-multilib libc6-dev \
		python3 python3-distutils python3-apt
		#default-jre perl python build-essential gcc-multilib libc6-dev

	ln -s python3 /usr/bin/python
	curl https://bootstrap.pypa.io/get-pip.py | python3
	python3 -m pip install --upgrade pip


#	apt-get -y install python3-setuptools bash python3 git wget gcc g++ make bzip2 \
#		apt-utils default-jre perl python build-essential gcc-multilib  make gcc g++ zlib1g-dev zlib1g unzip zip wget \
#		libbz2-dev zlib1g-dev libncurses5-dev libncursesw5-dev liblzma-dev libcurl4-openssl-dev
#	apt-get -y install r-base=3.4.1
	apt-get -y autoremove

	#python3 -m easy_install install pip

	apt-get update && apt-get install -y --no-install-recommends apt-utils

	export DEBIAN_FRONTEND=noninteractive
	apt-get install -y tzdata
	#ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime
	#dpkg-reconfigure -f noninteractive tzdata




#	#install conda and update
#	wget https://repo.anaconda.com/archive/Anaconda2-5.2.0-Linux-x86_64.sh -O Anaconda.sh
#	bash Anaconda.sh -b -f -p /usr/local
#	bash /usr/local/bin/activate
#	rm Anaconda.sh
#	conda update -n base conda
#	conda config --system --add channels conda-forge
#	conda config --system --append channels bioconda
#
#
##	#	Getting ...
##	#	The environment is inconsistent, please check the package plan carefully
##	#	The following packages are causing the inconsistency:
##	#	when trying to install r-base 
##	conda install anaconda
##	conda update --all
#
##	conda update -n base -c defaults conda --force
#
#	#install software by conda
#	#Search tools listing on https://anaconda.org/
##	conda install -c conda-forge r-base=3.4.1								#	<---- fails
##	conda install -c conda-forge r-devtools=1.13.5
##	conda install -c bioconda fastqc=0.11.7
##	conda install -c bioconda hisat2=2.1.0
##	conda install -c bioconda samtools=1.3.1
##	conda install -c bioconda stringtie=1.3.4
##	conda install -c bioconda star=2.6.0c
##	conda install -c bioconda rsem=1.3.0
##	conda install -c bioconda bioconductor-deseq2=1.18.1
##	conda install -c conda-forge libiconv=1.15
##	conda install -c bioconda bioconductor-tximport=1.8.0
##	conda install -c conda-forge r-readr=1.1.1
##	conda install -c bioconda bioconductor-genomeinfodbdata=1.1.0 
##	conda install -c conda-forge r-plyr=1.8.4
##	conda install -c bioconda trimmomatic=0.36


	#	https://www.bioinformatics.babraham.ac.uk/projects/download.html#fastqc
	wget --no-verbose https://www.bioinformatics.babraham.ac.uk/projects/fastqc/fastqc_v0.11.9.zip
	unzip fastqc_v0.11.9.zip


	rm fastqc_v0.11.9.zip




	#	http://daehwankimlab.github.io/hisat2/download/
	#	Version: HISAT2 2.2.1 Release Date: 7/24/2020
	wget --no-verbose -O /usr/local/hisat2 https://cloud.biohpc.swmed.edu/index.php/s/oTtGWbWjaxsQ2Ho/download





	wget --no-verbose https://github.com/deweylab/RSEM/archive/v1.3.3.tar.gz
	tar xfvz v1.3.3.tar.gz
	cd RSEM-1.3.3
	make
	make install
	cd ..
	/bin/rm -rf RSEM-1.3.3 v1.3.3.tar.gz



	#	trimmomatic
	wget --no-verbose http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.39.zip
	unzip Trimmomatic-0.39.zip
	ln -s /Trimmomatic-0.39/trimmomatic-0.39.jar /trimmomatic.jar
	rm Trimmomatic-0.39.zip


	wget --no-verbose https://github.com/samtools/samtools/releases/download/1.9/samtools-1.9.tar.bz2
	tar xfj samtools-1.9.tar.bz2
	cd samtools-1.9
	make
	make install
	cd ..
	/bin/rm -rf samtools-1.9 samtools-1.9.tar.bz2


	wget --no-verbose https://github.com/arq5x/bedtools2/releases/download/v2.29.1/bedtools-2.29.1.tar.gz
	tar xfz bedtools-2.29.1.tar.gz
	cd bedtools2
	make
	make install
	cd ..
	/bin/rm -rf bedtools2 bedtools-2.29.1.tar.gz

#	wget --no-verbose https://github.com/alexdobin/STAR/archive/refs/tags/2.5.3a.tar.gz
#	tar xfz 2.5.3a.tar.gz
#	mv /STAR-2.5.3a/bin/Linux_x86_64/STAR /usr/bin/
#	mv /STAR-2.5.3a/bin/Linux_x86_64/STARlong /usr/bin/
#	#	mv /STAR-2.5.3a/bin/Linux_x86_64_static/STAR /usr/bin/
#	#	mv /STAR-2.5.3a/bin/Linux_x86_64_static/STARlong /usr/bin/
#	/bin/rm -rf 2.5.3a.tar.gz STAR-2.5.3a

	wget --no-verbose https://github.com/alexdobin/STAR/archive/refs/tags/2.6.0c.tar.gz
	tar xfz 2.6.0c.tar.gz
	mv /STAR-2.6.0c/bin/Linux_x86_64/STAR /usr/bin/
	mv /STAR-2.6.0c/bin/Linux_x86_64/STARlong /usr/bin/
	#	mv /STAR-2.5.3a/bin/Linux_x86_64_static/STAR /usr/bin/
	#	mv /STAR-2.5.3a/bin/Linux_x86_64_static/STARlong /usr/bin/
	/bin/rm -rf 2.6.0c.tar.gz STAR-2.6.0c

	wget --no-verbose http://ccb.jhu.edu/software/stringtie/dl/stringtie-1.3.3b.Linux_x86_64.tar.gz
	tar xfz stringtie-1.3.3b.Linux_x86_64.tar.gz


	wget --no-verbose https://data.broadinstitute.org/igv/projects/downloads/2.12/IGV_2.12.3.zip
	unzip IGV_2.12.3.zip


	wget --no-verbose https://cran.r-project.org/src/base/R-4/R-4.1.2.tar.gz
	tar xfz R-4.1.2.tar.gz
	cd R-4.1.2
	./configure --with-x=no #	--with-readline=no
	make
	make install
	cd ..
	/bin/rm -rf R-4.1.2.tar.gz R-4.1.2

	Rscript -e 'install.packages( c( "devtools", "readr", "plyr", "locfit" ) , repos = "https://cloud.r-project.org")'

	Rscript -e 'install.packages("BiocManager", repos = "https://cloud.r-project.org")'
	Rscript -e 'BiocManager::install( ask = FALSE)'
	#Rscript -e 'BiocManager::install( version = "3.13", ask = FALSE)'
	#Rscript -e 'BiocManager::install( version = "3.12", ask = FALSE)'	#	R-4.0
	#Rscript -e 'BiocManager::install("DESeq2", update = TRUE, ask = FALSE)'
	#Rscript -e 'BiocManager::install("tximport", update = TRUE, ask = FALSE)'
	#Rscript -e 'BiocManager::install("GenomeInfoDbData", update = TRUE, ask = FALSE)'
	Rscript -e 'BiocManager::install(c("DESeq2", "tximport", "GenomeInfoDbData"), update = TRUE, ask = FALSE)'





	# Set the locale
	apt-get install -y locales
	locale-gen en_US.UTF-8 
	
	mkdir -p  /RNASeq
	apt-get -y install git
	git clone https://github.com/zhongw2/GeneTEFlow.git
	mv GeneTEFlow/GeneTEFlow_Dockerfiles/GeneTEFlow.Process/ngsdb /RNASeq/
	mv GeneTEFlow/GeneTEFlow_Dockerfiles/GeneTEFlow.Process/scripts /RNASeq/
	/bin/rm -rf GeneTEFlow




#	singularity run-help GeneTEFlow.Process.img 
%help

	singularity remote login --tokenfile ~/sylabs-token 
	singularity build --remote GeneTEFlow.Process.img GeneTEFlow.Process.def

	-- or --

	sudo singularity build GeneTEFlow.Process.img GeneTEFlow.Process.def 2>&1 | tee GeneTEFlow.Process.out


